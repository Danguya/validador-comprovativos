<!DOCTYPE html>
<html lang="pt">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Verificação de Comprovativos</title>
    <!-- Tailwind CSS CDN -->
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
</head>
<body class="bg-gray-100 flex items-center justify-center min-h-screen">
    <div class="w-full max-w-md p-6 bg-white rounded-lg shadow-md">
        <h2 class="text-2xl font-bold mb-6 text-center">Verificar Comprovativo</h2>
        
        <!-- Área de Drop -->
        <div id="drop-area" class="border-4 border-dashed border-gray-300 p-6 text-center rounded-lg bg-gray-50 cursor-pointer">
            <p class="text-gray-500">Arraste o PDF aqui ou clique para selecionar</p>
            <input id="fileInput" type="file" accept="application/pdf" class="hidden" />
        </div>

        <!-- Resultado -->
        <div id="result" class="mt-4 text-center hidden">
            <p id="status" class="text-lg font-semibold"></p>
        </div>
    </div>

    <!-- Axios CDN -->
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script>
        const dropArea = document.getElementById('drop-area');
        const fileInput = document.getElementById('fileInput');
        const result = document.getElementById('result');
        const status = document.getElementById('status');

        dropArea.addEventListener('click', () => fileInput.click());

        dropArea.addEventListener('dragover', (event) => {
            event.preventDefault();
            dropArea.classList.add('bg-gray-200');
        });

        dropArea.addEventListener('dragleave', () => {
            dropArea.classList.remove('bg-gray-200');
        });

        dropArea.addEventListener('drop', (event) => {
            event.preventDefault();
            dropArea.classList.remove('bg-gray-200');
            handleFiles(event.dataTransfer.files);
        });

        fileInput.addEventListener('change', (event) => {
            handleFiles(event.target.files);
        });

        function handleFiles(files) {
            if (files.length === 0) return;
            const file = files[0];
            
            if (file.type !== "application/pdf") {
                alert("Por favor, envie apenas arquivos PDF.");
                return;
            }

            uploadFile(file);
        }

        async function uploadFile(file) {
            try {
                const formData = new FormData();
                formData.append('file', file);

                const response = await axios.post('/scan', formData, {
                    headers: {
                        'Content-Type': 'multipart/form-data'
                    }
                });

                if (response.data && response.data.message) {
                    result.classList.remove('hidden');
                    status.textContent = response.data.message === "Comprovado" ? "Comprovativo Original ✅" : "Comprovativo Falso ❌";
                    status.classList.toggle('text-green-500', response.data.message === "Comprovativo original");
                    status.classList.toggle('text-red-500', response.data.message === "Comprovativo falso");
                } else {
                    throw new Error('Erro na resposta do servidor');
                }
            } catch (error) {
                console.error(error);
                alert("Erro ao verificar o comprovativo. Tente novamente.");
            }
        }
    </script>
</body>
</html>
